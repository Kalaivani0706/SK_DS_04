
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import folium
from folium.plugins import HeatMap


data = pd.read_csv('traffic_accident_data.csv')

print("First few rows of the dataset:")
print(data.head())

print("\nChecking for missing values:")
print(data.isnull().sum())

data['Weather'].fillna('Unknown', inplace=True)
data['Road_Conditions'].fillna('Unknown', inplace=True)

data['Date'] = pd.to_datetime(data['Date'])
data['Time'] = pd.to_datetime(data['Time'], format='%H:%M').dt.time


data['Hour'] = pd.to_datetime(data['Time'], format='%H:%M').dt.hour

data['Day_of_Week'] = data['Date'].dt.day_name()

plt.figure(figsize=(8, 6))
sns.countplot(x='Weather', data=data, order=data['Weather'].value_counts().index)
plt.title('Accidents by Weather Conditions')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(8, 6))
sns.countplot(x='Road_Conditions', data=data, order=data['Road_Conditions'].value_counts().index)
plt.title('Accidents by Road Conditions')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(10, 6))
sns.histplot(data['Hour'], bins=24, kde=False, color='orange')
plt.title('Accidents by Hour of the Day')
plt.xlabel('Hour of the Day')
plt.ylabel('Number of Accidents')
plt.show()

plt.figure(figsize=(8, 6))
sns.countplot(x='Day_of_Week', data=data, order=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])
plt.title('Accidents by Day of the Week')
plt.show()

if 'Latitude' in data.columns and 'Longitude' in data.columns:

    map_center = [data['Latitude'].mean(), data['Longitude'].mean()]
    accident_map = folium.Map(location=map_center, zoom_start=12)

    heat_data = data[['Latitude', 'Longitude']].dropna()

    HeatMap(heat_data.values, radius=10).add_to(accident_map)


    accident_map.save("Accident_Hotspots.html")
    print("\nAccident hotspots map saved as 'Accident_Hotspots.html'. Open it in a browser to view.")

plt.figure(figsize=(10, 8))
sns.heatmap(data.corr(), annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Matrix')
plt.show()
